<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC8806 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8806.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY RFC8976 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8976.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY I-D.fujiwara-dnsop-resolver-update SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.fujiwara-dnsop-resolver-update.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-08" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2025" month="January" day="08"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 163?>

<t>This document recommends improved DNS resolver behavior with respect to the processing of Name Server (NS) resource record (RR) sets (RRsets) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 170?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.</t>

<t>The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed <xref target="SOMMESE"/>.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref section="4.2.2" sectionFormat="of" target="RFC1034"/> says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be <xref target="SOMMESE"/>.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue (Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare">Ranking data</xref> and <xref target="RFC2181" section="6.1" sectionFormat="bare">Zone authority</xref> of <xref target="RFC2181"/>).
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t>When a referral response is received during iteration, a validation query SHOULD be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>

<t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>

<t>The triggering query to the child may contain the NS RRset in the authority section as well.
This NS RRset however has a lower trustworthiness than the set from the direct query (<xref section="5.4.1" sectionFormat="of" target="RFC2181"/>), so regardless of the order in which the responses are received, the NS RRset from the answer section from the direct child's apex NS RRset query will be stored in the cache eventually.</t>

<t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD (See <xref target="IANA"/>).</t>

<t>A No Data response (see <xref section="2.2" sectionFormat="of" target="RFC2308"/>) for the validating NS query should be treated the same as a failed validating NS query.
The parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>

<t>Additional validation queries for the "glue" address RRs of referral responses (if not already authoritatively present in cache) SHOULD be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative nameservers denoted in the referral response.</t>

<t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" address RRs that do not match names in the authoritative NS RRset may be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" address RRs that do match names in the authoritative NS RRset MUST be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>

<t>Validated "glue" may result in unreachable destinations.
A resolver MAY choose to keep the non-authoritative value for the "glue" next to the preferred authoritative value for fallback purposes.
Such a resolver MAY choose to fallback to use the non-authoritative value as a last resort, but SHOULD do so only if all other authoritative "glue" led to unreachable destinations as well.</t>

<t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation queries have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver SHOULD abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>

<t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers SHOULD be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
An NS RRset validation response is an example of such a response.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<section anchor="strict"><name>Strictly revalidating referral and authoritative NS RRset responses</name>
<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping, however without fallback to lower ranked NS RRsets and addresses, there is no failure mitigation and a failed NS RRset validation query, due to a broken child NS RRset or to malfunctioning child zone's authoritative servers,  will then lead to a hard failure to query the referred to child zone.</t>

</section>
</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then currently cached data whose owner names are at or below that re-validation point MUST NOT be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation MUST be triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation MUST happen at that interval instead.
However, resolvers SHOULD impose a sensible minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="impact"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.
The higher up the DNS tree, the more impact such an attack has.
An attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Strictly revalidating referral and authoritative NS RRset responses (see <xref target="strict"/>), enables the resolver to defend itself against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

<t>Since December 6, 2023, the root zone contains a DNSSEC signed cryptographic message digest <xref target="RFC8976"/><xref target="ROOT-ZONEMD"/>, covering all root zone data.
This includes all non-authoritative data such as the A and AAAA RRsets for the IP addresses of the root server identifiers, as well as the NS RRsets and glue that make up the delegations.
A root zone local to the resolver <xref target="RFC8806"/> with a verified and validated ZONEMD RRset, would provide protection similarly strong to strictly revalidating the root and the top level domains.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS responses with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="other-considerations"><name>Other considerations</name>
<t>An implementation may wish to consider limiting revalidation to delegations that cross administrative boundaries such as anywhere in ".ip6.arpa" and ".in-addr.arpa" as well as any so-called "public suffix" such as the root zone, top level zones such as ".com" or ".net", and effective top level zones such as ".ad.jp" or ".co.uk".</t>

<t>Some resolvers do not adhere to Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare"/> and <xref target="RFC2181" section="6.1" sectionFormat="bare"/> of <xref target="RFC2181"/>, and only use the non-authoritative parent side NS RRsets and glue returned in referral responses for contacting authoritative name servers <xref target="I-D.fujiwara-dnsop-resolver-update"/>.
As a consequence, they are not susceptible to many of the cache poisoning attacks enumerated in <xref target="DNS-CACHE-INJECTIONS"/> that are based upon the relative trustworthiness of DNS data.
Such resolvers are also not susceptible to the GHOST domain attacks <xref target="GHOST1"/>, <xref target="GHOST2"/>.
Such resolvers will however never benefit from DNSSEC protection of infrastructure RRsets and are susceptible to query redirection attacks.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC2308;
&RFC8109;
&RFC8806;
&RFC8914;
&RFC8976;
&RFC9567;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.fujiwara-dnsop-resolver-update;
&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ROOT-ZONEMD" target="https://lists.dns-oarc.net/pipermail/dns-operations/2023-December/022388.html">
  <front>
    <title>Root zone operational announcement: introducing ZONEMD for the root zone</title>
    <author initials="D." surname="Wessels" fullname="Duane Wessels">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="SOMMESE" target="https://par.nsf.gov/servlets/purl/10186683">
  <front>
    <title>When parents and children disagree: Diving into DNS delegation inconsistency</title>
    <author initials="R." surname="Sommese" fullname="Raffaele Sommese">
      <organization></organization>
    </author>
    <author initials="G. C. M." surname="Moura" fullname="Giovane C.M. Moura">
      <organization></organization>
    </author>
    <author initials="M." surname="Jonker" fullname="Mattijs Jonker">
      <organization></organization>
    </author>
    <author initials="R." surname="van Rijswijk-Deij" fullname="Roland van Rijswijk-Deij">
      <organization></organization>
    </author>
    <author initials="A." surname="Dainotti" fullname="Alberto Dainotti">
      <organization></organization>
    </author>
    <author initials="K. C." surname="Claffy" fullname="K.C. Claffy">
      <organization></organization>
    </author>
    <author initials="A." surname="Sperotto" fullname="Anna Sperotto">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC2119;
&RFC8174;


    </references>


<?line 357?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9Vd63PbNrb/rr8C435YuyMptpOmie/c2bq227hN7NR2m227
O1OIhCTEFMElSCtq6v/9ngcAgg85SbezM9czndh8AAcH5/E7D7CTyWRU6SpT
R+JUZWohK21ycaXuZKZT/mO2EacX13DNmuxOlXYkZ7NS3R3R1S0vjVKT5HIF
o6alnFcTrar5JM2tKSa5nZTRk5P9ZyP4DZ483D/8YrJ/gBdGuiiPRFXWtjrc
33++fziy9WylrYUXqk0BD5+f3XwzkqWSR+KyUCUNZYXMU/FK5nKhViqvxDHc
H60XQKlZSZ2LC6BIXG9spVbRW6Pb9dFIiIk4zytV5qqanCLNdAmWSP/6xfPF
sGZ3L1o3Xjiuq6UpdQVX7hRd4YlVCSPA44kpU77Mg7+GdeQ838lSZ2mYsS4T
5Z6Ht6tRIqsjYat0dKfyWiHRi9LUBe3E5Wv4E1aZAcuRz18hy6emXOBTulrW
M3h1Wf+7Vo86OzAaFfpI/FqZZCysKatSzS38tlnhL/8ajSQth1gE/wmhc3sk
rqfiBQ5GV3inr5f1CsSguQyTy1z/TpPAbZkpOzewJLqpmFYm6asF/jVNzKo9
y+up+Em/0/Esr2WdRRc7c5yfibO6NIUaix+n307jmQp48atSpTNZ5o4v0Uxv
puLGGHgzmuqNzjKQlOh6e7aLlyAs4qWcWbppgXMKNug60SqHjYNtvRVP9vfp
ZqKrzZE4XoHslalc8TWTwiwH+8+fiX+8cFfqvCrhwQtVLVWZgTzbeA1rouir
PIOJM5h3mmejUW7KFYnaET169c3Jwf7jJ/EfX4Q/Dg+eHTR/PN5/Fv54BnQ0
fzzbf9r88fzgSfTHl82d5188/fIIlDWft0k4n5xO5/VbvZaldFpfOgWa1AVp
e3juDrcSH1LvKnxKr4rSxAOt9dt8IWWZ2ugpHsvqVE1WutKsjfzOty8ur2/c
IvGnkuUCt2VZVYU9evRovV5Pga12AhJeGKvrFUrDI7x0uH9w+Kh5kc3izrdL
Y6vYhIC4gM6bW5WKn0EArivYFWch5CxTO2GERnP8zyT63YvZd+I7LfNF6w7J
5HfT3p3h919ufb97Z+j97+Gp/svfT9uXt828ZdoPvPlCnNYy77/7Ytq9MTzv
m3pwXneZRODwT4nApJDgGB4tcM8nKe05yFtmZKrSyV0NilfiHk8ynd/aCdx0
zyBhkzQ4hgloLhpZk9CfHxCqKzfBkfgpzAA8hBlgZS3nFblb9HVXYYZPFbp/
oGAMbt8/PmL7vpbmbZ3DcwPb8PW0c31w+hrUBQj4Wg5T0L4+NMIrnS9W8J/4
ZTko/K+mvTtDw/yg5zLfNsYPHzfGL0tTD7Lyl4/RBAkGMP+P1OEHPTj7D2F2
gAeTk+OTF2eT84vvzk5uzi8vrrdrh1ZKvSsyU6op/kqqAb6mKmVSPQJcVyO2
evRs/4svAbH1BDuAqDdgnME21ulGmDlhxROZLBWgrLcqIeD1qTJ7DKZefJ8p
PcCp42nvzjC3NxKBSrbawu7+vWHhS5ZSZeKN1GlOqLAzEkhffO/q8vJm8svl
xdmr0+18z7St7BR83MTIMpkCDx8VGowRuv5HdDlA1kfA+ceTU5Wo1Qys1f7h
4eNnz6bLapX19uPKmEr8bnIlwusyA+ORA9RICCYfAclVadI6IXUiKgV4dAEQ
RJT+9U/dLJRbJd4oa1Vm+ww6nbbuXV++enV2fbadOYUsp7mdTxfm7pEFIJ2p
yj4q6jJ7dLB/8Ozp02ePeyt/s1Q5oD7E1hwZJAiu4U+RaisXANaADH2HiwYG
GBLRxoLDtQQ4DXsCYG7zqau/kvM5CAgogFkBYFB9BlxNB+4NDfWtNnfIypMp
CNUriAlkf7Bvp4N3B0VXVpV+a8V3Jr8dltzencEFGgSnAigTVzAcgLRbkEf9
dnChDz01qOgZSDXuCPg9A+QOqvvAzUF0A6wRJxnsx2YI5AzdHCQpz8FwgAbB
lGaQnnBzNJlMhDeYo9HNUlvhzaYoIZqDXQeoIRzSTUnwPKYVM7WUdxq0bw1B
G14uwFoKYAZqI7yQgNagyIJNjaPK3YvrPRqEYsaSY8bdq6s9YUFT8Df8d0+k
dUkCX5EtuFM8cY0SPx2RxsxNlpk1PiTh5lyVJdgLpAO0QYl5aVagTE4NXIwr
LBMBVErWMjIZ49bKLMR6poZb6Fw0xEPZRkDoV25oZe3xMN2ABAtZ8d1CvcMV
4+/N+KzU5FQqZDK40YIopvDLsSwMBSpNLCSDIDB08CPSWEldTWGvlNg9pnGP
4WdPyBQMhrU8BM1A5KSpdobUsi9jvvTYxXantzaZ2zUyxBtZFDHrqfEEjz2/
ICTSmSyBXTPcrgkyTYPY4NC1hV9gpaUqMomLhgFgeXDfsgDhBdhO3BzMpqwh
vl/qHJdUyvyWbR/zcDq66u6UzKwRINbapDqRGVAQ8gYq2ovIaM42nsINjh0x
nDeMtxMkQLMr8ou+uXnpf403yPNiykq10mmaqdHo3PkrGmHg5/1naNDvR/8b
/XysIr5/7wLo+/vw+xfw+59S0GuviSQ9D+oeit5clzaizPkhCyPLqtGjsVj/
1Xr6/0MzvTIyTz+ojQRfeozZlVYsslrtCdjC3trCY8TylayS5XYN3aKg/651
CcKk6eGNgFUxK1KRY2AYT5lt3MpadATzwKswQA7rfFDMWN23jS0aO+bM13RE
kwGTTJ4OiZnp6vd/RbNvAOKCK8/MYoNa7n+I1ltg4Jo2e+fVj9c3O2P+V1xc
0u9XZz/8eH51doq/X784fvky/OKfuH5x+ePL0+a35s0ThJwXp/wyXBWdS6+O
f4Z/kIU7l68xZDp+ucMiF5sR3F3gG2y8xsAHpLxC0wxPKJuUeoaCkIuvT16L
gydgT/5OObiD52Rc/k5pty/R0qBG82QmBzniP1l8ikLJEgcBAwybXcD2ZmAD
JAnDOhdL0Crg4uiVgV2X20wiGsVVeCI2jSQUsAqNHgN25k6WWs50pquN17Bg
8mAjUxA9s+mgFpSdVG56JhEI5FU4uxgLlNPi6QhgsFf4lTMTsbjANOwN8bHo
Nlkb5hn6UYMJU7KNLIqbYHEqTa6LzRGQTzbf2Zx0A5qtE2ErFHkgwiuaJA3x
XpzGAx4EAw/rf//eBS3399OOb5F6Rdo0I3u/MmgBQNfQRCFXcWwgDnxq5RkN
2gUkgC6Wqf7d61dgO26+WMsNWyUYqgA3Hjl43AogrDKJyaaj45x4IRYG7B6r
tfNw9CCoP/ihauOsQbQjXds+Qzi76mhvMO/B+ofXnLTEbgBWXud2kyfL0uT6
d9aGPsnAS2e5n0wPp4c4ZeOFrdyA+rMDAEOhEVhXpiRzDCQuaapgGgGO16Wz
385YI7Vo8pFMkA+I3cGyl7f8MlqjYNnB1bC99pFf5QSBMnDWTHemo6/hGRQ4
SZqiKkpvlEpaLECRoCRECOwCmoWWmFzO5+BfURzHLQ/8N9tlpe35BOR4bUEK
4ZZY6gVuMct0grLkBAnWHXvTv9mhDR47LsAsfbdBnNoNO2LFF9Mn0wOIIBxe
BOcg94iep3j5F9pnN8Jmz20d1hnu7/emoxfs8WOvuTNTGduF4N93wu6BR0o1
6CJhzcbJ9VYDhMRyx4wgXATrbxAWXsdnWyFWUhpL2Jznn5kaFQ8U4gUAZXhg
zDY+gZHIGi/RBufo0HcP9hyscEOBEVMwj30IKTmJ91XBTUApwCrZQWxt/Wnt
E8IRdNamBOEB+ds93HMYoyEnAnDa2prsWEOIw3Smp6UW+VshPRqDnAF8Cs5n
gcQvV1NA37zamaW9JdXRYHk1iW0BvNWYvyYdGdqLQC1QkiO/RQYeLn+Ihaxv
zJI6z9CTSDC36xxrbnIlkkyjrpoPssPWwE7mCXGjw2H0MdWS7S/YD6qsZRBQ
pRBnleiKYThXak7NuFHKBPNpFcO/DGOzukAHY4RJwNiyoZY5ivSiBqTI1vc8
T9BswGxoDirvhCVEagoHNmssegk0eSt2CnWeK/Q+IKykhlQdiFArOlNkKNBc
mAJnottg/TPK9HnS1VzWGTlo5gfau7le1A657VqlxA7NK7NJGJzQz9fnF6e0
7ovr0z303Q6mrMA78WbqPMnqVP1ZjYAbuoxXNDp2ztMZWd4azmiuc8Qea5nT
YlRk+htk0hiRLdR0cAITp71x9eGXw7KWVprq+ZxCwWqtVCt6CXnGLXEMgR3c
lBtTiJfAsMzVd6zYvXl5avfY5Ni6QB8PoTts+1y/A5GiyQNxbavO6P6GQ60l
+ALMeMYqTpxCL+PdhIF13CrGJiWASqRa5gtlnX2AKSjm4YCxLR+15agTbHYJ
2o2UjdEUNTwnqJSDeFGvBbyViJXCCbRdkVrMaOBWmOhNUhQZXPvAajywGtoI
ylAkS4MxEuJNnBd5xlQ9yC9OzXRCShgjVaSWTmSqSia3oMA5WBsyQ0xuYTSI
IrGBngDuf2PQ4EjUtbFHUJVmaLsGqYOHx5ROnzBTLWb4nTt3QdJTAeJ0a9vJ
d7cFIE0goXONdqhNNOUDShWiLaddRalXztyygwHheApmY+N0KgYfEXcsVbNz
pZgbYNK2JIBSv0gn+V6k2vArRo24VjSTMBewY+W9vC+bqrTRFcpQsJZRyKjI
uDcSackFgvqgVVhR8qYdrwLWQou61hZ2IwpT2DbM4coyDk9lR/gwPrA1SCl4
ibwKUQHMmdZEHRiNyVxV5NHGJIrgg9BvGBexR7SyFst5xZGLiyRmioiPVq8y
q9YczpEqg1tMvT5ui9o78SjErVs6snaiLqYoj0DZqcE4fRhsjX3aEd09klbq
BWqbFHFLkZAJb8Ixawd5YkM6IDJUKAca2i81bGkFz+/fc0vH/f3Y/36IYHr0
Y7EoZdqCgicRFIaIt6Yn1CS37WRg/2fEye+hVBqRSTAv7aTwDMbsIloBIyyX
aZjhpuXk7YCjoD1g60PIFkErx3XHSRzeQRO3842AxDIVcsdqnaFDsgloAead
Gl9zYSqniZ7ECH25kH0gmUgBYpM6gyVmYBDTDRkFspDaFpQZk21I+TCh4PS+
P/s55LYNC0CPeRw8PcA7WI4bil4gYzYwCgVwlnWbr3lCSNO7EdeY53Mr6TG1
MSzwYrQ6ZDJhxAbmZmYB7o6wYvCmnbxwlFgwXdrhpbHDUPi0Bbzv8wHwGsA2
G+IdkJAmGZerd8FXwFDXZ1c/fXN8/hJNFnohUzvVBcajYr42VnuM39AyvCXY
dYY74jKNDs124BThUVdTAJhTJ7TeuyZ1mWrQoooliAwaVq9IWP343SdaJhTD
8bSVYnBbOPYmmVjkglRvXziVCjEL61hvaXOpMZnWTjexKSGqXOSP95lSp74U
f2Ou3s2HnPXLoJoMCpvtMcHlXLqq3o7JyJkYQOtu4i5slj3YDH51rbLMuY3w
/JLDWYcxhqtAIV9AYZYPQXknHHFNLsClAlohPqkyxDUQq1Bc5qwZuBWKBVx8
5cTXF8XIvLBJHbfXGEjgnetn9B1pg0rckVfUnUhmCLghZKhqhDLTyOS7eDFV
FYwdAf7hWdzm2AigxKIaWNrPreB92rAWOBqKFCicfnX8M2ZBMBDAeytAz2R3
GYBjFHFWlgZbivEZvEYVK2zLvL/3KU6+OTkBqnKwoi0r6EJqJz/478MvRWhu
HOwAGB7AIy4jrIgg7GzFFd18fSp2rxVmwc6PL44pIwTm+gJL+1WU+6CIsxGz
JgWILarwViAgcmQ+hPdYZoZ6pQKMJPNCgo86rtKhV7n48l9S/OOmTNU3+WGB
O5h+24nrzuwweoXlXQi4EEx759ypKyFA9R6UJH+vC0vCkvpG0dHS5IO9fRnw
Gh3n0CWD06dNDJ6bruNwK3ZV67/IdbSniLUTwigTeZIeZ52J5oJfsDpt+yQH
5TBKDIT3eBid94z4wLyXdUU1ABx0i4QMSAfZqtS4BCFahzDnAzkPpJXYZhMw
3GiFTdkkcuBOpuYg5HWeu6AGiw6ZCqVqTtFgEol2AEJ9F3V7NdB90cYN+09X
+fErpDLhhxey8bzz4LbTY0FBG/qqIsbqW+YkM/brv3ZD3OGWoOweGr6fQuTs
Voi8dmyExdQ5aHKypOZfCIBAuDhfB1FU46LQJTT5jlulim2uRmIev2NWCCQG
SEoi2NXZ6MU5uMkZRmtFXRbGOuVcxh6zTU54AX6vrXqQMsYk0nKqrgSHN6sr
b6NgTwinYjpuToVPLmkNWo6MN24b+xrrFTW4EMYKdAO6l5sWRvFM6iG1Oq90
xpWjwfu+MjYg2k14y9hGpZRLL7BNTCfoUKl+juhmhcnibtqW8l2Miganxiph
eidDTn6LZS9UScc1cuoTo7IV1gzjNgqXaI1Sn6Wv5cGrVZ1z6kaKvMb+005q
xivmXKss5RF2sZmyRBOdbfbIIXMOBVtSs7Aqn65vGQOuUDj8FTJeIfPOmxYt
lMMvTkcHjeZoLAV5+107p2QowVpjOdGltkgQZBOjc6kjkeTlQoZtOMhluUlF
tE7KYcWVhlZpwgm6nAEtxiVxQo2lZTKdKbWh6R+1TDRqRuEOagq+EI7ixJA5
5HOGnN15p2bCWmGH1cIz3ssD2P0oSxzMssvXx+nxYSTtteXhYmW1VHmLjCgh
Q4uENWOtxIfC28Kr7iydPWzwUXCLzv434uUZALvVBZ+OCHxpQdDR9BfeyhxE
+atuq862PFbwJx9KZ4W0VussYsTApqL2tyhijJu6sPzpw9DINgQSyGiENyMN
jBNnFB5QThyNhA3ew0nf8WCWWroGhujNXrqhS3l4nyIgPMxGKcLjAcLJUA47
8IY/jTA0+e64o+sh6N10VF76Zh639CFqcDSInK7PTjA81HONHmwsdmcqkd6J
OtCimu4AV2VL41yRjAaAoHIBZhoTed6Y0LsYr28lBbd8O5SPa/NoIw02SzwU
1ExHfl3NLSAdAHi9WLYu5i5pTsa2lboncYwJdHVWaW29CvY98McXBR6IhloB
xNhXgR4IzRpRWIEOenZaFatClGtl6+hgtInQrsezD0R/rTbDbSCz3Wq8fdQ9
V6oPjCVzrdZDBES+EheJtTewouTGGu9KauqnHepr7irR+88sjXIf9/X92Z9P
RG9yG3YDfOHknLVFpU2+xwGRBMXDRXq4JT6vSknInB1uzyQhrkhc76ffFNcD
sfU5HNxl7dbkR8zct7et8Hxgk63btEJu39itCD9re8t43ZQLXCcqAWBNmwK+
Kqg+5TOBXm1joM55QcxnqKb+1aqOKhu1J+SG8BsalubkLT/tMy1DTsFhIJeq
lWJWmlvQ027VreQyYjavc0oFIa/bbVID/cxAHoehBBSwasZzLMEdB2LhStPT
HEIfDAjD8CD1276B0DRRxmBzqxfmHAKyLuqQiUrgVFKaROMbjnIi+LNSlaSc
Ooe+2oFK6gYMf7k2AfKzXBQncW0c0A0X2UjcqCWAi+2YsV3R2bEBTCtacG5O
0pQsQ2YS46k2/Ioyg7tNyXDPb1k0pkPuVLVvFR1l1akwdkqSYO5NoonE02AI
wR9DwJ1zTjFiXZ2nFLRP2n4HUT7qpthp3yqMzqsdmhWe2uECON3fQZePvRRR
3hMW5AEjP+mhP8N9nU+IUQGxc5a0MZy+UNEngReuHTvCC1iBymQRqT04sztt
auubWtPm4dkGMRzbBSSju58Nc/tsbGYanqT1Bm0hv9ads5EmxCBYfYmCjADy
CEBFqyz5d9st/XM7wJIsNsiiisIBuwSg6iUk2v+lVqUsk+WGKh/c15JOh4j4
qH2hxARRtV4aDBRzg207sdHq3Drthy5N0YZ9vYx6IgKF2EKScH+Y60F0MA+4
Agbaak4E+LhKrQrXTYxJFv7LT20brn+YTQ59tGmUDYGUtJhjmyQbTCTXrS2p
S9ymRkrIZq0JdDQWiVGuJF757k+S8T6zfXu/zyS6nBOusCYgQ657tmlSvgtZ
zuQCQSDot+sjKzHU34iFypszr8PPUVs5xxvY+2cwlpvrqvLBJHJIY1kInYhv
E2bj+sadEako6RGXjcjKUvs2JbrQ6S6WvKPMH7Kh1LdCbU6ci4mZgev09efQ
mqU/Vu65FZOauxS1HLvadjNH1G9amULsYqvRHrVUYhArdp06NFu4B9qMZAJd
4HSoaRNFvU01AjMzu0ND7XDFwFP2Ac45h8ZuHyNPOnHgVxgl5Kk1qkckBe/A
V+wLhShow2b8f8S8LmmH8WACQL6E5bGdYMPqH1aDKU8YL8pnkh2exAr4knpU
Wr56QhsbtMVpAysSd1Ch/BOqU+8SgNtewNpNNvA8qHBjk9nEgCcM9osSTORy
+uColVyhXjDwUiv0e6UIZcmhFmpq4Wvl0WjVrvOZNkdWfMTlDrsdgMEAs6KO
6aatxIVLGr+soaidJOeGYGoorVdE1zwzvuCAO4HozeXnsdmW4Zq8MzoFq1Bx
ayYFeXXltfnUXPveO8x6ZZpsAdgFPg1AzvLOZWhKWiCZxNw39TaH6T0483vo
TAxgpuSWG9SaFAANixDYCRRg89uICyQYZfwhELKt8hYu4VkdagdGEBRrBO4i
t68jnAhKT1ThfKgFeUvRkYMsU9ic4xp3SCuok1O9K+rMOlhpMmeTm/5ytl4j
rMiKE2yUSQMr2geGqGY7hHHdyw5bKusqb4DSwONzeazpydg5iwvEXLE+MSk2
FJdqgcc5Ni5r8/zgCWVt/ojCvj+2BoRbbv4x+kOcX3xzOTm5PD0Tf4jXXLwY
OhL1B4B8fygxXGvPfvQnZseqt58g4Ium9Oar+H+If/7aat7757+6s3/62kfX
7ngP4YLXpb6TyWZol99/5p/8qFziyOdy8NBO060NmlcC7itr9o8kaM0h3FUh
PyX4R8Pbbb5rB6RY8Gkg7GAOi8P2D2UmdjkJZhtf0k1E7o1Dns8t2au/Y0RI
sLnyCdki5bAdYku0eagUmev7xJNQCIjT/snMB46yxtX/j0m6jMl+zY3J4jod
feAC7FCUhwIucKDETgWPVGch3AqL4fJJa852PffanagIr+D0mL2mNh0MasEV
Iwbx5oBQ5W44qtHg/w+sbI8xeGkWdSuuoeivd5XIuNNqTSSEPFtzLrg5g9KA
cY5NcbvwpbBdeDjGtvr2fBLVxrFv61xrI6/4oncX/T6O+NR904Tpn/Pi3F/f
WMSF/9axXTR2/YlYLpqeZj6tjHJC1fq/WjyQiBi4RS1qyp9eq7l2jV4BP503
dnkvRmZgOcJpHdeFD+CqrWqOrMwdgu/JQKuPHqFZABMYr/iccVjcnVstPoLG
jL+7xQMWMvHHFfLtMoIcY1PxF2VQXWOUS6Nit53K0bDYnhSnMC6mDyqrsjmX
oKxLas7w6GfTUh3ONLRtGYlBy5r7QPLHPNO3PqppTj7QjIly6D2jg0cLTD65
8xPY0WOKjav0VnQkmKpzEMlyf3gHcvIXE4byj+5LFKW5o9OakQ/yC4XwsJCY
afHHMVxU5b+RJJ6O8QOjj8eNQHBCy/fyyQ4vknJTVGYBiGpJp1esxcWleoHd
Xw6ufPn0/h5+bT7uhC3qhN5IIjE5FCZC1xiO6LigXlLrTLc/gpxobF/67sIL
9vnriEfepA4eGrGtLr+4pSmyVO6jB7DXTjUjDaYulLCazCRxzsSJIbPl2f5T
PNHOea+QY+evBXkc7b4y5U+jUu7bbW+8u82XFUAqDQcIdlCtwso9OMColoNP
1mMUiZOOBDczPYBRKGh4/37oG2qwTEy8whrJ08DWLjRWn2AnDp5tOynEJp3b
Yg8e+2gD87Gp9hCjdUy+0RDfr4jhd1CG9okQlg0I9dKMrU34VEbroGDvpD4W
aoHReLzIN6k6eYJJpK+f+b65+LD7+/ef9pVOQvi/Pnx2I2qhyu0exzi2dXTB
cZcOo1Twzu9DR/w4OO4dUu9/iqSvhJ2m0CjG49yKpjP47uBhSCRwDqNSRef7
D79uqSvAOuP93dv+GY2hMzmUFejUSjms5U81SKyk6ASzuK12X1jlQufkBKOj
V4Y7sFoIobkt8fMDKLmMI7g0veVcFZ28ax+g4jN3zQEHnwMNx6h8nwzd7RwM
DlixIYeM0NaDQcQTPgMSgp5BDUc00ckCregzFng6zIQRRKZX2nnvyF9x7TFA
HP44A54tjz9UgMLkTpjrcAAZbe6Ge4pAOnamung6lWUhuQoBf+fU6uGvNYYb
+8KsmbhSxk5RzzL8ekUNAPvdjugFNbzfjSl0X0pwj+3gB5d3cC928Cyi+9qJ
ms/RJt6pB96T6fRt4d5MzLS+3UGHi5nURiQcNJUpt04Z0fukgP+GQHyeIPoI
yvYOwg8A7lIBfGE8M9Q5Tac40e0ntKX9VuFQ4GHT9vCXjFHgji2foWZpT5T/
dIuLH21tqX/UBYTU3Bdnkgd8hMrBuJay8ifgtngfEjmcZiZtOHVOqpLxcrrH
PdyXOBmMUOjWbBil6BFnDdCMg5KCeVTsCd2mg52xKbXlq9Cs2zOVY6Kd3eHH
JBdiYFiqLoVc3PWBJx+y8FAQNJ0a5iBSTG5zswbd4S/EtxNelLToPtHPjoxG
b0yNAcCb4POoldHgFkSfHDAzRJZ9EQs1b3+E/894UAKS4QMxIe0cjFnT4f5j
Tuan/QmMOy05N4c1coWfOGY1IRANil00cANsxMz10uKmBOrZbHN/fweI9T4L
h/WOyOsEboXFb/kKOErVbBN9830srkyag259h50SbCy+QccAmNCICxAsf8aK
ee77KiiA4Vg/vxVXMisg9jH4pVfs7TREoINAGyoQQdDk/KjDO5jp7WFoUmUu
pAf8jf9nAmJ29P8leAMvI3O+xc/1M0JTWTGvKam9Ch8oxdxvTf+TA/yg03nb
MeEnimrbktW265rwE1vSeaPR559zkxJrM1hccZZqWOLnnx+JIqOQjWtSvGAX
BVMFINXvXPlVsMtxcHT0ubiJRCyIlzXzao1KupR2G5jtfSSrDStjSebKk8el
B/jZGbBwimzecb0AEycOn2N8t/9sD7/5f15xnxlGyv68YucbBizh4rch+T8S
G2V/a74Mgp+LpZGw6sjfzoClC7FzpVI0wGf85S/AYPjR7vpdo47+3IFnUCjh
D8/7mycLsRLs029EB4rLBiTThvYd0A2gZ2V3SCCRSfAS00eqwvYpfHCQ/BYJ
MP3vImB0G59CI4E9OHg+dbv5Pdr/q95WNjkm3yDQ6dyMPiPj77Vj7e42ftHa
yBCpHxziVh58uTca/R+WiR0ynmQAAA==

-->

</rfc>

