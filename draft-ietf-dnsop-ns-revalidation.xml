<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC8806 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8806.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY RFC8976 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8976.xml">
<!ENTITY RFC9520 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9520.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.fujiwara-dnsop-resolver-update SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.fujiwara-dnsop-resolver-update.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-10" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2025" month="June" day="20"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 183?>

<t>This document describes an optional algorithm for the processing of Name Server (NS) resource record (RR) sets (RRsets) during iterative resolution, and describes the benefits and considerations of this algorithm.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the delegation by re-querying the parent zone at the expiration of the TTL of either the parent or child NS RRset, whichever comes first.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 190?>

<section anchor="intro"><name>Introduction</name>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of NS record sets during iterative resolution.</t>

<t>In <xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> we recommend that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> works most reliable with good quality child NS RRsets, where the name servers referenced in the RDATA of the NS RRset do result in IP addresses which serve the child zone.
We consider both the root, as well as the zones delegated from the root, to have good quality child NS RRset, but recognize that, because of the less transparently administered further delegations (among others by parties that are perhaps less devoted to DNS administration), some of those further delegations may be sub-optimal or even unfit for upgrading NS RRset credibility.
<xref target="scoped-upgrading"/> describes limiting the upgrading of NS RRset credibility to address this.</t>

<t>The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be re-queried if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
This is described in (see <xref target="upgrade-addresses">Upgrading A and AAAA RRset Credibility</xref>).</t>

<t>In <xref target="strict">Strict and opportunistic revalidation</xref>, we make a distinction between strict and opportunistic revalidation.
Strict revalidation provides <xref target="impact">DNSSEC protection of infrastructure data</xref> with DNSSEC signed infrastructure data and validating resolvers, but for it to work correctly, good quality child NS RRsets are a requisite.
Opportunistic revalidation allows for fallback to the non-authoritative data returned in the referral responses, but therefore does not provide the same degree of protection as strict revalidation does.</t>

<t>Finally, in {{revalidation (Delegation Revalidation), we recommend that resolvers revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

<section anchor="terminology"><name>Terminology</name>
<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>Throughout this document we will also use terminology with the meaning as defined below:</t>

<dl newline="true">
  <dt>Triggering query:</dt>
  <dd>
    <t>the DNS query that caused ("triggered") a referral response.</t>
  </dd>
  <dt>Infrastructure RRsets (data):</dt>
  <dd>
    <t>the NS and address (A and AAAA) RRsets used by resolvers to contact the authoritative name servers</t>
  </dd>
  <dt>Revalidation:</dt>
  <dd>
    <t>the process of obtaining the authoritative infrastructure data</t>
  </dd>
  <dt>Validation (validating) query:</dt>
  <dd>
    <t>the extra query that is performed to get the authoritative version of infrastructure RRsets</t>
  </dd>
  <dt>Delegation revalidation:</dt>
  <dd>
    <t>re-establishing the existence and validity of the parent-side NS RRset of a delegation</t>
  </dd>
  <dt>Revalidation point:</dt>
  <dd>
    <t>a delegation under revalidation</t>
  </dd>
  <dt>Re-delegation:</dt>
  <dd>
    <t>the process of changing a delegation information to another set of authoritative name servers, potentially under different administrative control</t>
  </dd>
</dl>

</section>
</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed <xref target="SOMMESE"/>.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref section="4.2.2" sectionFormat="of" target="RFC1034"/> says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be <xref target="SOMMESE"/>.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative (Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare">Ranking data</xref> and <xref target="RFC2181" section="6.1" sectionFormat="bare">Zone authority</xref> of <xref target="RFC2181"/>).
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal end user applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their name server configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of name servers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those name servers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t>When a referral response is received during iteration, a validation query <bcp14>SHOULD</bcp14> be sent in parallel with the resolution of the triggering query, to one of the delegated name servers for the newly discovered zone cut.
Note that DNSSEC validating resolvers today, when following a secure referral, already need to dispatch a query to one of the delegated name servers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>

<t>A validation query consists of a query for the child's apex NS RRset, sent to one of the newly discovered delegation's name servers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query <bcp14>MAY</bcp14> be cached with an authoritative data ranking.
Successive queries directed to the same zone <bcp14>SHOULD</bcp14> be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset <bcp14>SHOULD</bcp14> remain the one with the highest ranking and <bcp14>SHOULD</bcp14> be used for successive queries.</t>

<t>A response to the triggering query to the child may contain the NS RRset in the authority section as well.
This NS RRset however has a lower trustworthiness than the set from the direct query (<xref section="5.4.1" sectionFormat="of" target="RFC2181"/>), so regardless of the order in which the responses are received, the NS RRset from the answer section from the direct child's apex NS RRset query <bcp14>MAY</bcp14> be stored in the cache eventually.</t>

<t>When a resolver detects that the child's apex NS RRset contains different name servers than the non-authoritative version at the parent side of the zone cut, it <bcp14>MAY</bcp14> report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD (See <xref target="IANA"/>).</t>

<t>A No Data response (see <xref section="2.2" sectionFormat="of" target="RFC2308"/>) for the validating NS query should be treated the same as a failed validating NS query.
The parent NS RRset <bcp14>SHOULD</bcp14> remain the one with the highest ranking and <bcp14>SHOULD</bcp14> be used for successive queries.
All resolution failures <bcp14>MUST</bcp14> be cached as directed in <xref target="RFC9520"/>, to prevent aggressive requeries.</t>

</section>
<section anchor="scoped-upgrading"><name>Limiting upgrading NS Credibility</name>
<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> works most reliable with good quality child NS RRsets, where the name servers referenced in the RDATA of the NS RRset do result in IP addresses which serve the child zone.
We consider both the root, as well as the zones delegated from the root, to have good quality child NS RRset, but recognize that, because of the less transparently administered further delegations (among others by parties that are perhaps less devoted to DNS administration), some of those further delegations may be sub-optimal or even unfit for upgrading NS RRset credibility.
An implementation <bcp14>MAY</bcp14> limit revalidation to delegations that cross administrative boundaries such as anywhere in ".ip6.arpa" and ".in-addr.arpa" as well as any so-called "public suffix" such as the root zone, top level zones such as ".com" or ".net", and effective top level zones such as ".ad.jp" or ".co.uk".</t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>

<section anchor="upgrading-glue"><name>Upgrading glue</name>

<t>Additional validation queries for the "glue" address RRs of referral responses (if not already authoritatively present in cache) <bcp14>SHOULD</bcp14> be sent with the validation query for the NS RRset as well.
Positive responses <bcp14>SHOULD</bcp14> be cached with authoritative data ranking.
The non-authoritative "glue" <bcp14>MAY</bcp14> be cached with non-authoritative data ranking for fallback purposes.
Successive queries directed to the same zone <bcp14>SHOULD</bcp14> be directed to the authoritative nameservers denoted in the referral response.</t>

<t>The names from the NS RRset in a validating NS response may differ from the names from the NS RRset in the referral response.
Outstanding validation queries for "glue" address RRs that do not match names in a newly discovered authoritative NS RRset may be discarded, or they may be left running to completion.
Their result <bcp14>MUST</bcp14> no longer be used in queries for the zone.
Outstanding validation queries for "glue" address RRs that do match names in the authoritative NS RRset <bcp14>MUST</bcp14> be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"/>).</t>

<t>Validated "glue" may result in unreachable destinations.
A resolver <bcp14>MAY</bcp14> choose to keep the non-authoritative value for the "glue" next to the preferred authoritative value for fallback purposes.
Such a resolver <bcp14>MAY</bcp14> choose to fallback to use the non-authoritative value as a last resort, but <bcp14>SHOULD</bcp14> do so only if all other authoritative "glue" led to unreachable destinations as well.</t>

</section>
<section anchor="upgrading-additional-address-from-authoritative-ns-responses"><name>Upgrading additional address from authoritative NS responses</name>

<t>Authoritative responses for a zone's NS RRset at the apex can contain nameserver addresses in the Additional section.
An NS RRset validation response is an example of such a response.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>When additional addresses in authoritative NS RRset responses are DNSSEC verifiable (because the complete RRset is included, including a verifiable signature for the RRset) and DNSSEC secure, they <bcp14>MAY</bcp14> be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries <bcp14>SHOULD</bcp14> be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

</section>
</section>
<section anchor="strict"><name>Strict and opportunistic revalidation</name>

<section anchor="strictly-revalidating-referrals-and-authoritative-ns-rrset-responses"><name>Strictly revalidating referrals and authoritative NS RRset responses</name>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping, however without fallback to lower ranked NS RRsets and addresses, there is no failure mitigation and a failed NS RRset validation query, due to a broken child NS RRset or to malfunctioning child zone's authoritative servers, will then lead to a hard failure to query the referred to child zone.</t>

<t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then any responses received from sending the triggering query to the parent's delegated nameservers <bcp14>SHOULD</bcp14> be discarded, and this query should be sent again to one of the child's apex nameservers.</t>

<t>It is <bcp14>RECOMMENDED</bcp14>, to limit <strong>strict</strong> upgrading of NS, A and AAAA RRset credibility, to the root zone and zones delegated from the root zone only (see <xref target="scoped-upgrading"/>).</t>

</section>
<section anchor="opportunistic"><name>Opportunistic revalidating referral and authoritative NS RRset responses</name>

<t>In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver <bcp14>SHOULD</bcp14> abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>

<t>One may consider to only limit <em>strict</em> upgrading of NS, A and AAAA RRset credibility to the root zone and zones delegated from the root zone, and perform <em>opportunistic</em> revalidations for further delegations (see <xref target="scoped-upgrading"/>).</t>

</section>
</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is revalidation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under revalidation is called a "revalidation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the revalidation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the revalidation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then currently cached data whose owner names are at or below that revalidation point <bcp14>MUST NOT</bcp14> be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since revalidation can discover changes in the shape of the delegation hierarchy it is more efficient to revalidate from the top (root) downward (to the owner name) since an upper level revalidation may obviate lower level revalidations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Revalidation <bcp14>MUST</bcp14> be triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation <bcp14>MUST</bcp14> happen at that interval instead.
However, resolvers <bcp14>SHOULD</bcp14> impose a sensible minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly revalidated with no further work.
However, when re-delegation or take-down occurs, a revalidating cache <bcp14>SHOULD</bcp14> discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="impact"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.
The higher up the DNS tree, the more impact such an attack has.
An attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Strictly revalidating referral and authoritative NS RRset responses (see <xref target="strict"/>), enables the resolver to defend itself against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

<t>Since December 6, 2023, the root zone contains a DNSSEC signed cryptographic message digest <xref target="RFC8976"/><xref target="ROOT-ZONEMD"/>, covering all root zone data.
This includes all non-authoritative data such as the A and AAAA RRsets for the IP addresses of the root server identifiers, as well as the NS RRsets and glue that make up the delegations.
A root zone local to the resolver <xref target="RFC8806"/> with a verified and validated ZONEMD RRset, would provide protection similarly strong to strictly revalidating the root and the top level domains.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS responses with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the re-delegated zone <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="other-considerations"><name>Other considerations</name>
<t>Some resolvers do not adhere to Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare"/> and <xref target="RFC2181" section="6.1" sectionFormat="bare"/> of <xref target="RFC2181"/>, and only use the non-authoritative parent side NS RRsets and glue returned in referral responses for contacting authoritative name servers <xref target="I-D.fujiwara-dnsop-resolver-update"/>.
As a consequence, they are not susceptible to many of the cache poisoning attacks enumerated in <xref target="DNS-CACHE-INJECTIONS"/> that are based upon the relative trustworthiness of DNS data.
Such resolvers are also not susceptible to the GHOST domain attacks <xref target="GHOST1"/>, <xref target="GHOST2"/>.
Such resolvers will however never benefit from DNSSEC protection of infrastructure RRsets and are susceptible to query redirection attacks.</t>

<t>Revalidating referral and authoritative NS RRset responses will induce more traffic from the resolver to the authoritative name servers.
The traffic increase may be substantial if the address RRsets for the names in the NS RRset's RDATA were provided non-authoritatively (as glue or as additional addresses) and need revalidation too <xref target="REDIRECTED-QUERY-TRAFFIC"/>.
Resolvers <bcp14>SHOULD</bcp14> take care to limit the amount of work they are willing to do to resolve a query to a sensible amount.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC2308;
&RFC8109;
&RFC8806;
&RFC8914;
&RFC8976;
&RFC9520;
&RFC9567;
&RFC2119;
&RFC8174;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.fujiwara-dnsop-resolver-update;
&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ROOT-ZONEMD" target="https://lists.dns-oarc.net/pipermail/dns-operations/2023-December/022388.html">
  <front>
    <title>Root zone operational announcement: introducing ZONEMD for the root zone</title>
    <author initials="D." surname="Wessels" fullname="Duane Wessels">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="SOMMESE" target="https://par.nsf.gov/servlets/purl/10186683">
  <front>
    <title>When parents and children disagree: Diving into DNS delegation inconsistency</title>
    <author initials="R." surname="Sommese" fullname="Raffaele Sommese">
      <organization></organization>
    </author>
    <author initials="G. C. M." surname="Moura" fullname="Giovane C.M. Moura">
      <organization></organization>
    </author>
    <author initials="M." surname="Jonker" fullname="Mattijs Jonker">
      <organization></organization>
    </author>
    <author initials="R." surname="van Rijswijk-Deij" fullname="Roland van Rijswijk-Deij">
      <organization></organization>
    </author>
    <author initials="A." surname="Dainotti" fullname="Alberto Dainotti">
      <organization></organization>
    </author>
    <author initials="K. C." surname="Claffy" fullname="K.C. Claffy">
      <organization></organization>
    </author>
    <author initials="A." surname="Sperotto" fullname="Anna Sperotto">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="REDIRECTED-QUERY-TRAFFIC" target="https://www.icann.org/en/system/files/files/reduced-risk-redirected-query-traffic-signed-root-name-server-data-22may24-en.pdf#h.8mh7wvmas7vi">
  <front>
    <title>The reduced risk of redirected query traffic with signed root name server data</title>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization></organization>
    </author>
    <author initials="Y." surname="Thessalonikefs" fullname="Yorgos Thessalonikefs">
      <organization></organization>
    </author>
    <author initials="B." surname="Overeinder" fullname="Benno Overeinder">
      <organization></organization>
    </author>
    <author initials="M." surname="MÃ¼ller" asciiSurname="Muller" fullname="Moritz MÃ¼ller" asciiFullname="Moritz Muller">
      <organization></organization>
    </author>
    <author initials="M." surname="Davids" fullname="Marco Davids">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 455?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Unbound resolver software has opportunistic revalidating of referral and authoritative NS RRset responses, as described in <xref target="upgrade-ns"/>, <xref target="upgrade-addresses"/> and <xref target="opportunistic"/> in this document, implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
  <t><xref target="revalidation"/> has been implemented in the Unbound resolver since version 1.4.17 (released May 24, 2012).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+1d2XIbR5Z9x1fUoB+aVAAQSctaOL2YJimLtkTKJGW13d0R
TlQlgDQLlejKKkKwrH+ZD5mnmR+bu+RWCyjK7ZmYh2aELaCWXG7e5dwlE+Px
eFCpKpeHyYnM5VxUShfJpbwVucr4y3STnJxfwTWj81tZmoGYTkt5e0hXt7w0
yHRaiCW0mpViVo2VrGbjrDB6NS7MuIyeHO/vDQZqVR4mVVmb6mBv79newcDU
06UyBu5XmxW0cnZ6/XwgSikOk4uVLOlNk4giS16JQszlUhZVcgT3B+s5DEwv
hSqScxhAcrUxlVxGbw1u1oeDJBknZ0Uly0JW4xMcIl2CGdG/bq580U/R3oum
iReO6mqhS1XBlVtJV7hjWUIL8Hiqy4wvc+OvYR4F93e8UHnme6zLVNrn4e1q
kIrqMDFVNriVRS1x0PNS1ysi/MVr+AqzzIHCSNYvkMITXc7xKVUt6im8uqj/
UcuHLYIPBit1mPy10ukoMbqsSjkz8GmzxA9/HwwETYdIBP8liSrMYXI1SV5g
Y3SFF/ZqUS9h1cNl6FwU6mfqBG6LXJqZhinRTclj5SF9Mcdvk1Qvm728niTf
qXcq7uW1qPPoYquPs9PktC71So6SN5OvJnFPK3jxi1JmU1EWli5RT28nybXW
8GbU1VuV58Ap0fVmb+cvgVmSl2Jq6KYByklYoKtUyQIWDpb1Jnm0t0c3U1Vt
DpOjJfBemYklX9MZ9LK/9+xp8pcX9kpdVCU8eC6rhSxz4GcTz2FNI/qiyKHj
HPqdFPlgUOhySax2SI9ePj/e3/vsUfzlc//lYP/pfvjy2d5T/+UpjCN8ebr3
OHx5tv8o+vIk3Hn2+cFe9OXxk0OQ3GLWHM/Z+GQyq39Sa1EKK/GllaZxvQIW
jJ67xXXFh+S7Cp9Sy1Wp44bW6qdiLkSZmegpbsuoTI6XqlIsmvzOVy8urq7t
jPGvEuUc12hRVStz+PDher2eAI3NGNh9pY2ql8gaD/HSwd7+wcPwIqvE4VcL
bapYnwDvgALQNzJLvgduuKpgiay6ENNcDn0LQYzc3zj67Hju6+RrJYp54w4x
6NeTzp3+919ufb99p+/9b+Cp7svfTJqXt/W8pduPvPkiOalF0X33xaR9o7/f
t3Vvv/YyscDBr2KB8UqAlXg4xzUfZ7TmwG+5FpnMxrc1SGGJazzOVXFjxnDT
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
r8CYHzyi3g6wjuZ/AAlRD7n1eQAA

-->

</rfc>

