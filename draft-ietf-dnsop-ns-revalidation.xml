<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC8806 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8806.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY RFC8976 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8976.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY I-D.fujiwara-dnsop-resolver-update SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.fujiwara-dnsop-resolver-update.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-08" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2025" month="January" day="08"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 162?>

<t>This document recommends improved DNS resolver behavior with respect to the processing of Name Server (NS) resource record (RR) sets (RRsets) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 169?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.</t>

<t>The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed <xref target="SOMMESE"/>.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref section="4.2.2" sectionFormat="of" target="RFC1034"/> says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be <xref target="SOMMESE"/>.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue (Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare">Ranking data</xref> and <xref target="RFC2181" section="6.1" sectionFormat="bare">Zone authority</xref> of <xref target="RFC2181"/>).
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t>When a referral response is received during iteration, a validation query SHOULD be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>

<t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>

<t>The triggering query to the child may contain the NS RRset in the authority section as well.
This NS RRset however has a lower trustworthiness than the set from the direct query (<xref section="5.4.1" sectionFormat="of" target="RFC2181"/>), so regardless of the order in which the responses are received, the NS RRset from the answer section from the direct child's apex NS RRset query will be stored in the cache eventually.</t>

<t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD (See <xref target="IANA"/>).</t>

<t>Additional validation queries for the "glue" address RRs of referral responses (if not already authoritatively present in cache) SHOULD be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative nameservers denoted in the referral response.</t>

<t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" address RRs that do not match names in the authoritative NS RRset may be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" address RRs that do match names in the authoritative NS RRset MUST be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>

<t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation queries have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver SHOULD abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>

<t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers SHOULD be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
An NS RRset validation response is an example of such a response.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then currently cached data whose owner names are at or below that re-validation point MUST NOT be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation MUST be triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation MUST happen at that interval instead.
However, resolvers SHOULD impose a sensible minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="impact"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.
The higher up the DNS tree, the more impact such an attack has.
An attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Revalidating referral and authoritative NS RRset responses enables to defend against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

<t>Since December 6, 2023, the root zone contains a DNSSEC signed cryptographic message digest <xref target="RFC8976"/><xref target="ROOT-ZONEMD"/>, covering all root zone data.
This includes all non-authoritative data such as the A and AAAA RRsets for the IP addresses of the root server identifiers, as well as the NS RRsets and glue that make up the delegations.
A root zone local to the resolver <xref target="RFC8806"/> with a verified and validated ZONEMD RRset, would provide protection similarly strong to revalidating the root and the top level domains.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS responses with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="other-considerations"><name>Other considerations</name>
<t>An implementation may wish to consider limiting revalidation to delegations that cross administrative boundaries such as anywhere in ".ip6.arpa" and ".in-addr.arpa" as well as any so-called "public suffix" such as the root zone, top level zones such as ".com" or ".net", and effective top level zones such as ".ad.jp" or ".co.uk".</t>

<t>Some resolvers do not adhere to Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare"/> and <xref target="RFC2181" section="6.1" sectionFormat="bare"/> of <xref target="RFC2181"/>, and only use the non-authoritative parent side NS RRsets and glue returned in referral responses for contacting authoritative name servers <xref target="I-D.fujiwara-dnsop-resolver-update"/>.
As a consequence, they are not susceptible to many of the cache poisoning attacks enumerated in <xref target="DNS-CACHE-INJECTIONS"/> that are based upon the relative trustworthiness of DNS data.
Such resolvers are also not susceptible to the GHOST domain attacks <xref target="GHOST1"/>, <xref target="GHOST2"/>.
Such resolvers will however never benefit from DNSSEC protection of infrastructure RRsets and are susceptible to query redirection attacks.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;
&RFC8806;
&RFC8914;
&RFC8976;
&RFC9567;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.fujiwara-dnsop-resolver-update;
&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ROOT-ZONEMD" target="https://lists.dns-oarc.net/pipermail/dns-operations/2023-December/022388.html">
  <front>
    <title>Root zone operational announcement: introducing ZONEMD for the root zone</title>
    <author initials="D." surname="Wessels" fullname="Duane Wessels">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="SOMMESE" target="https://par.nsf.gov/servlets/purl/10186683">
  <front>
    <title>When parents and children disagree: Diving into DNS delegation inconsistency</title>
    <author initials="R." surname="Sommese" fullname="Raffaele Sommese">
      <organization></organization>
    </author>
    <author initials="G. C. M." surname="Moura" fullname="Giovane C.M. Moura">
      <organization></organization>
    </author>
    <author initials="M." surname="Jonker" fullname="Mattijs Jonker">
      <organization></organization>
    </author>
    <author initials="R." surname="van Rijswijk-Deij" fullname="Roland van Rijswijk-Deij">
      <organization></organization>
    </author>
    <author initials="A." surname="Dainotti" fullname="Alberto Dainotti">
      <organization></organization>
    </author>
    <author initials="K. C." surname="Claffy" fullname="K.C. Claffy">
      <organization></organization>
    </author>
    <author initials="A." surname="Sperotto" fullname="Anna Sperotto">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC2119;
&RFC8174;


    </references>


<?line 347?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9Vc6XMbN5b/zr8CpfkwUoqkjtiOra2tiSwpsRJbciR5PEl2
qgJ2gySsZqOn0S2acfy/7zsANPqgbGemtmpdlQrVB/Dw8I7fO9CTyWRU6SpT
x+JMZWohK21yca3uZaZT/mO2EWeXN3DNmuxelXYkZ7NS3R/T1S0vjVKT5HIF
o6alnFcTrar5JM2tKSa5nZTRk5ODpyP4BU8eHRw9nhwc4oWRLspjUZW1rY4O
Dp4dHI1sPVtpa+GFalPAwxfnt9+NZKnksbgqVElDWSHzVLySuVyolcorcQL3
R+sFUGpWUufiEigSNxtbqVX01uhufTwSYiIu8kqVuaomZ0gzXYIl0v/94vli
WLO7F60bL5zU1dKUuoIr94qu8MSqhBHg8cSUKV/mwV/DOnKe73SpszTMWJeJ
cs/D29UokdWxsFU6uld5rZDoRWnqgnbi6jX8CavMgOXI52+R5VNTLvApXS3r
Gby6rP9Vq/3ODoxGhT4Wv1YmGQtryqpUcwu/Niv88c/RSNJyiEXwnxA6t8fi
Zipe4GB0hXf6ZlmvQAyayzC5zPXvNAnclpmycwNLopuKaWWSvl3gX9PErNqz
vJ6Kv+v3Op7ltayz6GJnjotzcV6XplBj8Wb6/TSeqYAXvy1VOpNl7vgSzfR2
Km6NgTejqd7qLANJia63Z7t8CcIiXsqZpZsWOKdgg24SrXLYONjWO/Ho4IBu
JrraHIuTFchemcoVXzMpzHJ48Oyp+McLd6XOqxIevFTVUpUZyLON17Amir7N
M5g4g3mneTYa5aZckagd06PX350eHnz9KP7jcfjj6PDpYfjjKUzd/PH04Enz
x7PDR9Ef3zR3nj1+8s0x6Gc+b896MTmbzut3ei1L6RS9dDozqQtS8PDcPe4e
PqTeV/iUXhWliQda63f5QsoytdFTPJbVqZqsdKVZAfmd719c3dy6deG/SpYL
3IllVRX2eH9/vV5PgZN2AkJdGKvrFQrAPl46Ojg82m9eZEu48/3S2Cq2GiAh
oObmTqXiZ9jzmwo2whkFOcvUThihURb/bxL99pL1g/hBy3zRukNi+MO0d2f4
/Zdb3+/eGXr/R3iq//KP0/blbTNvmfYTb74QZ7XM++++mHZvDM/7th6c110m
ETj6UyIwKST4gv0F7vkkpT0HecuMTFU6ua9B10rc40mm8zs7gZvuGSRskgZf
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

-->

</rfc>

